package cals;

import java.io.*;

public class backup {
	private static boolean numcheck(String glow) { //파일이나 경로에 숫자가 6자리 이상 포함된 것들을 제외하기위해 만든 함수
		int num=0;
		
		for(int tmp=0;tmp<glow.length();tmp++) {
			char tmpchar = glow.charAt(tmp);
			if('0'<= tmpchar && tmpchar <='9') {
				num++;
			}
		}
		System.out.println("num:"+num);
		if(num>=6) {
			return false;
		}
		else {
			return true;
		}
		
		
	}
	private static void ListFile(String strDirPath) throws IOException {
		String a = "[";
		String b = "]";
		String c = "$";
		String d = "'";
		String e = "\"";
		String f = ".php";
		String save = "php7확인.txt";
		boolean jooseak = true;
		boolean javascr = true;
		File dir = new File(strDirPath);
		// 읽어들일 디렉토리의 객체

		if (!dir.isDirectory()) {
			// 디렉토리가 아니거나 없으면 종료
			System.out.println(strDirPath + "찾을수 없는 폴더 or 경로 입니다.");
			System.exit(0);
		}

		// 저장할 파일 output stream 생성
		PrintWriter writer = new PrintWriter(new FileWriter(save, true));

		// 읽어들일 파일 input stream 선언
		BufferedReader br = null;

		// 해당 디렉토리의 모든 파일을 리스트화
		File[] files = dir.listFiles();

		for (int i = 0; i < files.length; i++) {
			int y = 0;
			

			if (files[i].isDirectory()) {

				if (files[i].getPath().contains("test") == false && files[i].getPath().contains("TEST") == false
						&& files[i].getPath().contains("Test") == false&&numcheck(files[i].getPath())==true) {

					ListFile(files[i].getPath());
					continue; //test 라는 글자가 있는 경로가있으면 재귀함수 호출후 건너뛰기

				} else {
					continue;
				}

			}

			// input stream object 생성
			br = new BufferedReader(new FileReader(files[i]));
			String line = "";

			// 각 파일의 한 라인씩 읽어들인다.

			if (files[i].getName().length() >= 4) {
				if (numcheck(files[i].getName())==false) {
					continue;
				}
				if (files[i].getName().contains("test") == true || files[i].getName().contains("TEST") == true
						|| files[i].getName().contains("Test") == true) {
					continue; // test 라는 글자가 있는 파일이있으면 건너뛰기
				}
				if (files[i].getName().substring(files[i].getName().length() - 4, files[i].getName().length())
						.equals(f)) { //.php 파일만 찾기

					while ((line = br.readLine()) != null) {
						// 라인 내용중 검색하고자 단어가 있으면 파일에 기록한다.
						y++; // 해당 파일의 줄을 보여주기위한 변수
						int lineCnt = 0;
						int fromIndex = -1;
						System.out.println(files[i].getPath());
						while ((fromIndex = line.indexOf(a, fromIndex + 1)) >= 0) {
							lineCnt++;
						}
						for (int g = 0; g <= lineCnt; g++) {
							if(line.contains("<script type=\"text/javascript\">")) {
								javascr=false;
							}
							if(line.contains("</script>")) {
								javascr=true;   // 자바 스크립트문을 피하기위한 if문
							}
							
							if(line.contains("/*")) {
								jooseak=false;
							}
							if(line.contains("*/")) {
								jooseak=true;
							}
							if (line.contains("#") == true || line.contains("//") == true
									|| line.contains("<--") == true || line.contains("-->") == true) {
								continue; //주석문을 피하기위한 if문
							}
							if (line.indexOf(a) != -1) {

								int wcA = line.indexOf(a);
								int wcB = line.indexOf(b) + 1;
								if (wcA >= wcB) {
									continue;
								}

								String find = line.substring(wcA, wcB);
								// System.out.println("line1:"+line);
								line = line.replace(find, "").trim();

								if (find.contains(c) == false && find.contains(d) == false && find.contains(e) == false
										&& find.matches(".*[0-9].*") == false && find.matches(".*[가-힣].*") == false
										&& find.equals("[]") == false&&jooseak==true&&javascr==true) {
									writer.write(files[i].getAbsolutePath() + "(line:" + y + ", check:" + find + ")\n");

									// 괄호안 판별
								}
							}

						}
					}

					writer.flush();
				} else {
					continue;
				}
			} else {
				continue;
			}
		}

		// input stream close.

		// output stream close.
		writer.close();
	}

	public static void main(String args[]) throws IOException {
		String baseDir = "C:\\hyunwoo"; // 검색할 디렉토리
		ListFile(baseDir);
		System.out.println("성공");
	}
}